@page "/tickets/form/{id:long}/"

@using HelpDesk.Models.Dto.Auth
@using HelpDesk.Services.Tickets
@using HelpDesk.Utils
@using HelpDesk.Models.PLA.Tickets
@using HelpDesk.Components.Pages.Tickets.Forms.Components

@inject TicketService TicketService
@inject StorageSession Session

<MudText Typo="Typo.h6" GutterBottom="true" Align="Align.Start">@_ticket?.Title</MudText>
<MudText Typo="Typo.body2" GutterBottom="true" Align="Align.Start">№ @_ticket?.Id</MudText>

@if (!string.IsNullOrEmpty(_errorMsg))
{
    <MudAlert Severity="Severity.Error" Class="mt-2" ShowCloseIcon="true" CloseIconClicked="() => _errorMsg = string.Empty">
        @_errorMsg
    </MudAlert>
}

<MudGrid>
    <MudItem xs="12" sm="6">
        <MudPaper Class="mt-2" Elevation="0">
            <MudForm>
                <AuthorOfTicket Ticket="_ticket"/>
                <DetailsOfTicket Ticket="_ticket" DeskToken="_deskToken"/>
            </MudForm>
        </MudPaper>
        <MudPaper Class="mt-2" Elevation="0">

        </MudPaper>
        <MudPaper Class="mt-2" Elevation="0">

        </MudPaper>
    </MudItem>
    <MudItem xs="12" sm="6">
        <MudPaper Class="mt-2" Elevation="0">
            <MudText Class="mb-2">
                Дополнительная информация
            </MudText>
            <MudForm>
            </MudForm>
        </MudPaper>
    </MudItem>
</MudGrid>


@code {

    [Parameter] public long Id { get; set; }
    private string _errorMsg = string.Empty;
    protected TicketView? _ticket;
    private DeskToken? _deskToken;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        _deskToken = await Session.GetCurrentAccessToken();
        if (_deskToken is null) return;
        await LoadTickets();
    }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();
    }

    public async Task LoadTickets()
    {
        try
        {
            _ticket = await TicketService.GetTicket(Id);
        }
        catch (Exception e)
        {
            _errorMsg = e.Message;
        }
    }

}